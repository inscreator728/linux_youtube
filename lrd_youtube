#!/usr/bin/env python3
"""
LRD — Legendary Rogue Downloader
Hacker Edition (yt-dlp backend)

Features:
- Auto clipboard monitoring (copy a YouTube URL → instant download)
- Hacker-styled neon console output
- Supports single videos, playlists, audio-only, video+audio
- Auto resume, retries, metadata saving
- Organized folders: ~/LRD/Playlists and ~/LRD/Single_Videos
"""

import os
import sys
import time
import pyperclip
from pathlib import Path
from rich.console import Console
from rich.panel import Panel
import yt_dlp

# -------------------------------
# Setup
# -------------------------------
console = Console()
base_dir = Path.home() / "LRD"
base_dir.mkdir(parents=True, exist_ok=True)

banner = r"""
██╗     ██████╗ ██████╗ 
██║     ██╔══██╗██╔══██╗
██║     ██║  ██║██████╔╝
██║     ██║  ██║██╔═══╝ 
███████╗██████╔╝██║     
╚══════╝╚═════╝ ╚═╝     
 LEGENDARY ROGUE DOWNLOADER
 Hacker Edition 🚀
"""

console.print(Panel(banner, style="bold green", expand=False))

# -------------------------------
# Helpers
# -------------------------------
def sanitize(name: str) -> str:
    return "".join(c for c in name if c.isalnum() or c in " _-").strip()

def progress_hook(d):
    if d["status"] == "downloading":
        pct = d.get("_percent_str", "").strip()
        speed = d.get("_speed_str", "").strip()
        eta = d.get("_eta_str", "").strip()
        console.print(f"[cyan]↓ {d.get('filename','')[:50]}[/cyan] {pct} {speed} ETA:{eta}", end="\r")
    elif d["status"] == "finished":
        console.print(f"\n[green]✓ Finished:[/green] {d.get('filename')}")

def download_url(url: str, mode: str = "best"):
    """
    mode = best | audio | video
    """
    out_dir = base_dir / ("Playlists" if "playlist" in url.lower() else "Single_Videos")
    out_dir.mkdir(parents=True, exist_ok=True)

    opts = {
        "outtmpl": str(out_dir / "%(playlist_index)03d - %(title).200s.%(ext)s"),
        "ignoreerrors": True,
        "noplaylist": False,
        "continuedl": True,
        "retries": 5,
        "progress_hooks": [progress_hook],
        "quiet": True,
    }

    if mode == "audio":
        opts["format"] = "bestaudio/best"
        opts["postprocessors"] = [{
            "key": "FFmpegExtractAudio",
            "preferredcodec": "mp3",
            "preferredquality": "192",
        }]
    elif mode == "video":
        opts["format"] = "bestvideo+bestaudio/best"
    else:
        opts["format"] = "best"

    with yt_dlp.YoutubeDL(opts) as ydl:
        ydl.download([url])

    console.print(f"[bold green]✔ LRD completed[/bold green] → {out_dir}")


# -------------------------------
# Clipboard Watcher
# -------------------------------
def clipboard_watcher():
    console.print("[yellow]LRD Clipboard Watcher active...[/yellow]")
    last_clip = ""
    while True:
        try:
            clip = pyperclip.paste().strip()
            if clip != last_clip and ("youtube.com" in clip or "youtu.be" in clip):
                console.print(f"\n[magenta]⚡ LRD detected new URL:[/magenta] {clip}")
                download_url(clip, mode="best")
                last_clip = clip
        except KeyboardInterrupt:
            console.print("\n[red]🛑 LRD stopped by user[/red]")
            break
        except Exception as e:
            console.print(f"[red]LRD Error:[/red] {e}")
        time.sleep(2)


# -------------------------------
# Main
# -------------------------------
if __name__ == "__main__":
    if len(sys.argv) > 1:
        url = sys.argv[1]
        mode = sys.argv[2] if len(sys.argv) > 2 else "best"
        download_url(url, mode)
    else:
        clipboard_watcher()
